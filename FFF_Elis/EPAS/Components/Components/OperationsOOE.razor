@using EPAS.Shared
<style>
    .circle {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1em;
        color: white;
    }
    
    .TEE {
        background-color: #080;
    }
    
    .PERSON{
        background-color: #00F;
    }
    
    .BRAND{
        background-color: #FF0000;
    }
    
    .SONSTIGE{
        background-color: #000;
    }
</style>

<div style="height: 100%">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="5">
            @if (Einsatz != null)
            {
            <div id="einsatzcard-container" class="einsatzcard-container">
                @foreach (var item in Einsatz.Einsaetze.Einsatz.Where(x => x.Einsatzart != "SELBST"))
                {
                <EinsatzCardComponent Einsatz="item"/>
                }
            </div>
            }
            else
            {
            <p>Kein Einsatz...</p>
            }
        </MudItem>
        <!-- Image -->
        <MudItem xs="6" Style="width: 100%; height: 90vh;">
            <!-- Map <img width="100%" src="https://cf-einsaetze.ooelfv.at/webext2/img/karte_laufend_tn400.jpg" alt="Einsätze OÖ" />-->
            <div id="map" style="height: 100%; color: black"></div>
        </MudItem>
    </MudGrid>
</div>

<script>
    window.startAutoScroll = function startAutoScroll()
    {
        const element = document.getElementById('einsatzcard-container');
        if (!element) return;

        let scrollHeight = element.scrollHeight;
        let clientHeight = element.clientHeight;
        let scrollStep = 1; // Adjust the scroll step as needed
        let scrollInterval = 50; // Adjust the interval as needed

        function scroll() {
            if (element.scrollTop + clientHeight >= scrollHeight) {
                element.scrollTop = 0;
            } else {
                element.scrollTop += scrollStep;
            }
        }

        setInterval(scroll, scrollInterval);
    }
            
    
     window.RegisterMap = function RegisterMap(mapEntries){
         console.log(mapEntries);
     
        var map = L.map('map').setView([48.17801,14.08310], 9);
        // MAP CODE
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        var coordinates = '[ 13.691787532748462, 47.579980415929889 ], [ 13.732654022442613, 47.57773034335252 ], [ 13.757865107283767, 47.5210073854116 ], [ 13.746326261587271, 47.502320056853719 ], [ 13.719754990487411, 47.462819997610183 ], [ 13.605942430202054, 47.475845735607123 ], [ 13.602876972006017, 47.475896454616894 ], [ 13.582856450628059, 47.47550827496876 ], [ 13.513361713701769, 47.497213452876281 ], [ 13.473934783049749, 47.531024630060806 ], [ 13.478469659926446, 47.562433763605 ], [ 13.517474413472071, 47.62388895672504 ], [ 13.487057210977767, 47.63103549735677 ], [ 13.514140817579701, 47.676241041265023 ], [ 13.548063967268417, 47.714823454292123 ], [ 13.433469015572669, 47.739258710477962 ], [ 13.462474874718307, 47.786859531354402 ], [ 13.532580670419073, 47.776844478910341 ], [ 13.5266703981245, 47.797732246245786 ], [ 13.447610880717811, 47.804451135674846 ], [ 13.395275767028675, 47.798600571919962 ], [ 13.348156258606874, 47.810649045104206 ], [ 13.309401296692693, 47.813536413134202 ], [ 13.290325527302539, 47.864466895045233 ], [ 13.267308525551996, 47.892135525827619 ], [ 13.278323565236123, 47.905342939368751 ], [ 13.27748367233546, 47.955422124340892 ], [ 13.30473321992954, 47.964721795386232 ], [ 13.355740647248055, 47.940468302241094 ], [ 13.360320994161707, 47.94478873157334 ], [ 13.368852912648117, 47.9726880695492 ], [ 13.301126898814976, 48.00857637935583 ], [ 13.209901470411149, 47.983174706180847 ], [ 13.20707267531659, 47.979650150038374 ], [ 13.195874250533201, 47.974880264576974 ], [ 13.142370975421642, 47.975052733456842 ], [ 13.12144503777586, 47.99688921221891 ], [ 13.101131942650055, 47.997459459925935 ], [ 13.099958187932289, 47.998269288651613 ], [ 13.054856938977494, 48.013999417805628 ], [ 13.044399891734093, 48.027968838524316 ], [ 13.044189302795095, 48.038069073068378 ], [ 13.009492383988002, 48.037218846330312 ], [ 12.986804806863335, 48.028545962297123 ], [ 12.936698792726006, 48.037115468453756 ], [ 12.935265163581597, 48.0366690206478 ], [ 12.889187330800945, 47.991719778098854 ], [ 12.857373111808512, 47.997348909747551 ], [ 12.83118509068697, 48.028771977184299 ], [ 12.767673450093653, 48.066656771166961 ], [ 12.747826656014277, 48.100304100647094 ], [ 12.790346772329324, 48.133157445376511 ], [ 12.845252918438023, 48.168569682734407 ], [ 12.870881070167139, 48.203182106974296 ], [ 12.952378942158441, 48.209673641849349 ], [ 13.015391671626906, 48.257038517536088 ], [ 13.061375271190983, 48.270045011978539 ], [ 13.139822670863945, 48.283597041547388 ], [ 13.192688191200137, 48.296170250328196 ], [ 13.250882941370181, 48.293861753673042 ], [ 13.311682411530184, 48.317127695243862 ], [ 13.338548653413923, 48.332397411068207 ], [ 13.341050019387982, 48.334187921088557 ], [ 13.37125457639638, 48.35717518435716 ], [ 13.405037671422647, 48.372865347155617 ], [ 13.417363959519246, 48.400736976270053 ], [ 13.433191830057275, 48.426441313931221 ], [ 13.431445079844236, 48.445828560810327 ], [ 13.436763053259218, 48.479597690391955 ], [ 13.440462322656579, 48.485963812481039 ], [ 13.442133477067269, 48.528795266536655 ], [ 13.47228162522768, 48.55669015613033 ], [ 13.508662244547365, 48.591828028544256 ], [ 13.548703234276186, 48.571480842988677 ], [ 13.638347253103191, 48.553199784453028 ], [ 13.674360798678439, 48.531203739405335 ], [ 13.724293960302278, 48.513722341359873 ], [ 13.761501495250306, 48.561311205551938 ], [ 13.798201945685692, 48.574392440490229 ], [ 13.822976306837825, 48.619325703855495 ], [ 13.814563703814196, 48.659415265237797 ], [ 13.830810367795081, 48.692603328274984 ], [ 13.834546973023194, 48.700829893613104 ], [ 13.818321368921968, 48.755236982934399 ], [ 13.874166490423294, 48.766675076313589 ], [ 13.923547047315743, 48.735391949209777 ], [ 13.973700672480517, 48.711793195634613 ], [ 14.000496542506999, 48.709283571478409 ], [ 14.055060253195919, 48.658439820225752 ], [ 14.00777687982591, 48.640354736463792 ], [ 14.03940102613522, 48.613557738746344 ], [ 14.092791744772713, 48.592939510821019 ], [ 14.160742302808048, 48.589936241744411 ], [ 14.267600759754272, 48.581695154079561 ], [ 14.330418283185368, 48.552526433358068 ], [ 14.33862381175925, 48.555384787996168 ], [ 14.390866619742345, 48.578173995886182 ], [ 14.440767624693814, 48.604844417155988 ], [ 14.471901256140397, 48.644650018063714 ], [ 14.501203068003178, 48.617915201286756 ], [ 14.552094269195178, 48.606455588137642 ], [ 14.603578015697249, 48.629287997532494 ], [ 14.623950449236242, 48.605054704256489 ], [ 14.688226952664776, 48.585001092388516 ], [ 14.733512866405684, 48.553484172246414 ], [ 14.808355569985297, 48.554452147316738 ], [ 14.872313402415301, 48.528442462549009 ], [ 14.918171068511841, 48.506423610629525 ], [ 14.874229757250031, 48.46507772877569 ], [ 14.908937674498883, 48.435379100482479 ], [ 14.925412208947593, 48.424502749993884 ], [ 14.95359394767566, 48.392005112113246 ], [ 14.961661862276186, 48.379211004643508 ], [ 14.944696456681836, 48.334060909925796 ], [ 14.940899818669662, 48.324346429340999 ], [ 14.98229724223215, 48.299809064582774 ], [ 14.989257710600386, 48.256627721661452 ], [ 14.967176679359643, 48.246454313680665 ], [ 14.9493765953804, 48.219832562456659 ], [ 14.9713677938265, 48.199533558138796 ], [ 14.959655590894204, 48.203081360223401 ], [ 14.941654295692935, 48.227976825078045 ], [ 14.882880860379144, 48.233459357193851 ], [ 14.853860494650831, 48.212026718935761 ], [ 14.837515898992754, 48.194435338792047 ], [ 14.7662172367989, 48.179814509183586 ], [ 14.75880317196169, 48.178278333262355 ], [ 14.71249549298957, 48.17936993754109 ], [ 14.685579357914088, 48.157991811975457 ], [ 14.640839520032836, 48.175943831718847 ], [ 14.620464597522956, 48.191385824204254 ], [ 14.55807323829416, 48.231687424757496 ], [ 14.518386993837433, 48.238310752577775 ], [ 14.512754675251516, 48.234761231194582 ], [ 14.47815826291343, 48.202624776750156 ], [ 14.479323305252938, 48.179197356647158 ], [ 14.480047265119381, 48.172261697684455 ], [ 14.465119466732309, 48.148296658581444 ], [ 14.490160602378694, 48.110668444125508 ], [ 14.476249613684136, 48.105116645362891 ], [ 14.455116114019029, 48.089391233995592 ], [ 14.456054223911236, 48.074714092617512 ], [ 14.453328788357997, 48.043739680891349 ], [ 14.489303378556682, 48.01155203960905 ], [ 14.552335912421619, 47.980563687413081 ], [ 14.613423048698143, 47.948802065598308 ], [ 14.646271824385098, 47.942846942149735 ], [ 14.667816193597279, 47.935441548970879 ], [ 14.725084760353196, 47.935665590452615 ], [ 14.766758218261662, 47.88031598057858 ], [ 14.759948034358755, 47.87294189127239 ], [ 14.707199855307106, 47.851343953564772 ], [ 14.70908265136549, 47.790788831858599 ], [ 14.73566808338259, 47.749426793777985 ], [ 14.694168395716099, 47.766504626899781 ], [ 14.643463521446574, 47.726160420642856 ], [ 14.528885381761471, 47.714301967210197 ], [ 14.485769844431777, 47.682746730614916 ], [ 14.441435979634011, 47.656118020052254 ], [ 14.41805486150295, 47.657280316408951 ], [ 14.388734994989315, 47.636643741682384 ], [ 14.323597311082393, 47.60825952976716 ], [ 14.261611978484815, 47.611178964524491 ], [ 14.229754900473345, 47.651335265305775 ], [ 14.202993128424746, 47.653243494259669 ], [ 14.174786412508292, 47.63865431978715 ], [ 14.090321147711409, 47.620244800293115 ], [ 14.04797578242021, 47.617863145539587 ], [ 14.045938276604826, 47.637628329582569 ], [ 14.052627135407647, 47.668593666839087 ], [ 14.007797462698619, 47.701597915639432 ], [ 13.893114702931202, 47.718186452830928 ], [ 13.857510045138977, 47.7279221891866 ], [ 13.774852101100302, 47.719032619853486 ], [ 13.70505213579654, 47.657162403720513 ], [ 13.695703979460355, 47.602759006021877 ], [ 13.691787532748462, 47.579980415929889 ]';

        var borderStyle = {
            "fillOpacity": 0
            };

         url = `https://raw.githubusercontent.com/ginseng666/GeoJSON-TopoJSON-Austria/master/2021/simplified-99.9/laender_999_geo.json`
         fetch(url).then(function(response) {
             return response.json();
         })
             .then(function(json) {
                 console.log(json.features[6]);
                 geojsonFeature = json.features[6];
                 L.geoJSON(geojsonFeature, {style: borderStyle}).addTo(map);
             });
        
        mapEntries.forEach(entry => {
            L.marker([entry.lat, entry.lon], 
            {
                icon: new L.DivIcon({
                    className: 'custom-div-icon',
                    html: "<div class='circle " + entry.einsatzTyp +" '>" + entry.alarmstufe + "</div>",
                    iconSize: [30, 42],
                    iconAnchor: [15, 42]
                })
            }
            ).addTo(map);
        });
    }
    
    window.drawCountyBoundary = function drawCountyBoundary(county, state)
    {
        url = `https://nominatim.openstreetmap.org/search.php?county=${county}&state=${state}&polygon_geojson=1&format=jsonv2`
        fetch(url).then(function(response) {
            return response.json();
        })
            .then(function(json) {
                geojsonFeature = json[0].geojson;
                L.geoJSON(geojsonFeature).addTo(map);
            });
    }
        
</script>
