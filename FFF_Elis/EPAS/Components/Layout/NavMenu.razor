@implements IDisposable

@inject NavigationManager NavigationManager

<div class="fro-sidebar @(_isCollapsed ? "fro-sidebar--collapsed" : "")" style="z-index: 1; position: fixed; top: 4%; height: 95%; padding-top: 30px;">
    <div class="fro-sidebar__top">
        <nav class="fro-sidebar__navigation">
            <a class="fro-list-item" href="/">
                <i class="fro-icon fro-icon--fixed fro-list-item__icon">house</i>
                <div class="fro-list-item__label">Home</div>
            </a>
            
            <a class="fro-list-item" href="/TestingPage">
                <i class="fro-icon fro-icon--fixed fro-list-item__icon">circle_exclamation</i>
                <div class="fro-list-item__label">Testing</div>
            </a>
        </nav>
    </div>

    <footer class="fro-sidebar__footer">
        <button
            @onclick="ToggleCollapse"
            class="fro-button fro-button--small fro-button--pill fro-button--icon-only fro-button--no-min-width fro-sidebar__footer-toggle"
        >
            @if(!_isCollapsed)
            {
            <i class="fro-icon fro-icon--fixed">arrow-left-to-line</i>
            }
            else
            {
            <i class="fro-icon fro-icon--fixed">arrow_right_from_line</i>
            }
        </button>
    </footer>
</div>

@code{

    private string? _currentUrl;

    bool _isCollapsed = true;
    bool _settingsCollapsed = true;
    bool _permissionsCollapsed = true;
    bool _applicationsCollapsed = true;
    bool _utilityCollapsed = true;

    string _username = string.Empty;

protected override void OnInitialized()
{
    _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    NavigationManager.LocationChanged += OnLocationChanged;
}

async void ToggleUtilityCollapse()
{
    _utilityCollapsed = !_utilityCollapsed;
    await InvokeAsync(StateHasChanged);
}

async void ToggleCollapse()
{
    _isCollapsed = !_isCollapsed;
    await InvokeAsync(StateHasChanged);
}

async void TogglePermissionsCollapse()
{
    _permissionsCollapsed = !_permissionsCollapsed;
    await InvokeAsync(StateHasChanged);
}

async void ToggleSettingsCollapse()
{
    _settingsCollapsed = !_settingsCollapsed;
    await InvokeAsync(StateHasChanged);
}

async void ToggleApplicationsCollapse()
{
    _applicationsCollapsed = !_applicationsCollapsed;
    await InvokeAsync(StateHasChanged);
}

private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
{
    _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
    StateHasChanged();
}

public void Dispose()
{
    NavigationManager.LocationChanged -= OnLocationChanged;
}

}


<!--<MudNavMenu Style="background-color: var(--fro-background); color: var(--fro-text); height: 100%">
    <NavLink href="" class="nav-item px-3 customNavItem">
        <i class="fro-icon">house</i>
    </NavLink>
    <AuthorizeView>
        <Authorized>
            <div class="nav-item px-3 customNavItem">
                <NavLink class="nav-link" href="Account/Manage">
                    <i class="fro-icon">user</i>
                </NavLink>
            </div>
            <div class="nav-item px-3 customNavItem">
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken/>
                    <input type="hidden" name="ReturnUrl" value="@_currentUrl"/>
                    <button type="submit" class="nav-link">
                        <i class="fro-icon">arrow-right-from-bracket</i>
                    </button>
                </form>
            </div>
        </Authorized>
        <NotAuthorized>
            <div class="nav-item px-3 customNavItem">
                <NavLink class="nav-link" href="Account/Register">
                    <i class="fro-icon">user-plus</i>
                </NavLink>
            </div>
            <div class="nav-item px-3 customNavItem">
                <NavLink class="nav-link" href="Account/Login">
                    <i class="fro-icon">arrow-right-to-bracket</i>
                </NavLink>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu> -->

@code {




}