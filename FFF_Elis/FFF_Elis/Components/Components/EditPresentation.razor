@using System.Reflection
@using FFF_Elis.Components.BusinessObjects
@inject IJSRuntime JS

<script src="https://unpkg.com/swapy/dist/swapy.min.js"></script>
<h3>EditPresentation</h3>
<span class="fro-toggle">
    <input type="checkbox" @bind="MoveMode" id="enable" class="fro-toggle__checkbox" />
    <label for="enable" class="fro-label fro-toggle__label"
    >Reihenfolge Ändern</label>
</span>
<button type="button" class="fro-button fro-button--primary" @onclick="AddNewItem">Neues item</button>

@if (MoveMode)
{
    <div id="swapy-container" class="swapy-container container-1" style="width: 100%;">
        @foreach(var item in _clientSettings.VisualItems)
        {
            <div class="swapy-item" data-swapy-slot="@(_clientSettings.VisualItems.IndexOf(item)+1)">
                <div class="item__content" data-swapy-item="@item.Name">
                    <div class="fro-panel swapy-item" style="display: inline-flex; width: 100%; justify-content: space-around; align-items: center;">
                        <div>@item.Name</div>
                        <div>@item.Type</div>
                        <div>@item.Duration s</div>
                    </div>
                </div>
            </div>
        }
    </div>
    
    <script type="module">
    const container = document.getElementById('swapy-container');
    const enableInput = document.querySelector('#enable');

    const swapy = Swapy.createSwapy(container, {
        animation: 'dynamic',
        continuousMode: false
    });

    swapy.onSwap((event) => {
        localStorage.setItem('swapyPresentationItems', JSON.stringify(event.data.array));
    });
    </script>
}
else
{
    <div class="swapy-container">
        @foreach(var item in _clientSettings.VisualItems)
        {
        <div class="swapy-item" data-swapy-slot="@(_clientSettings.VisualItems.IndexOf(item)+1)">
            <div class="item__content" data-swapy-item="@item.Name">
                <div class="fro-panel" style="display: inline-flex; width: 100%; justify-content: space-around; align-items: center;">
                    <div>@item.Name</div>
                    <div>@item.Type</div>
                    <div>@item.Duration s</div>
                    <div>
                        <div class="fro-button-group">
                            <button type="button" class="fro-button fro-button--primary fro-button-group__fro-button" @onclick="@(() => EditItem(item))">Bearbeiten</button>
                            <button type="button" class="fro-button fro-button--error fro-button-group__fro-button" @onclick="@(() => RemoveItem(item))">Löschen</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        }
    </div>
}